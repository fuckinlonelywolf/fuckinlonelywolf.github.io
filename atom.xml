<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>martini&#39;s blog</title>
  
  <subtitle>wings</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-10-29T15:43:36.133Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>martini</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2020/10/29/hello-world/"/>
    <id>http://example.com/2020/10/29/hello-world/</id>
    <published>2020-10-29T11:21:31.043Z</published>
    <updated>2020-10-29T15:43:36.133Z</updated>
    
    <content type="html"><![CDATA[<p>本篇是初始化内容</p><a id="more"></a><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本篇是初始化内容&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>初识mysql---基础篇笔记</title>
    <link href="http://example.com/2020/06/20/%E5%88%9D%E8%AF%86mysql-%E5%9F%BA%E7%A1%80%E7%AF%87%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2020/06/20/%E5%88%9D%E8%AF%86mysql-%E5%9F%BA%E7%A1%80%E7%AF%87%E7%AC%94%E8%AE%B0/</id>
    <published>2020-06-20T14:30:27.000Z</published>
    <updated>2020-06-28T15:24:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇是学习mysql的基础篇笔记</p><a id="more"></a><h1 id="初识数据库"><a href="#初识数据库" class="headerlink" title="初识数据库"></a>初识数据库</h1><h2 id="DBMS—数据库管理系统"><a href="#DBMS—数据库管理系统" class="headerlink" title="DBMS—数据库管理系统"></a>DBMS—数据库管理系统</h2><h3 id="RDBMS—关系型数据库"><a href="#RDBMS—关系型数据库" class="headerlink" title="RDBMS—关系型数据库"></a>RDBMS—关系型数据库</h3><ul><li>Oracle</li><li>MySQL</li><li>MSSQL</li><li>PG<h3 id="NoSQL—非关系型数据库"><a href="#NoSQL—非关系型数据库" class="headerlink" title="NoSQL—非关系型数据库"></a>NoSQL—非关系型数据库</h3></li><li>MongoDB</li><li>ES</li><li>Redis<h2 id="MySQL数据库软件—配置"><a href="#MySQL数据库软件—配置" class="headerlink" title="MySQL数据库软件—配置"></a>MySQL数据库软件—配置</h2><h3 id="MySQL服务启动"><a href="#MySQL服务启动" class="headerlink" title="MySQL服务启动"></a>MySQL服务启动</h3></li></ul><ol><li><p>手动。  </p></li><li><p>cmd–&gt; services.msc 打开服务的窗口</p></li><li><p>使用管理员打开cmd：</p><pre><code> net start mysql: 启动mysql的服务 net stop mysql: 关闭mysql服务</code></pre><h3 id="MySQL登录"><a href="#MySQL登录" class="headerlink" title="MySQL登录"></a>MySQL登录</h3><p> 登陆前服务要启动</p><ol><li>root用户：command line client</li><li>mysql -uroot -p密码</li><li>mysql -hip -uroot -p连接目标的密码</li><li>mysql –host=ip –user=root –password=连接目标的密码</li><li>mysql -h主机名 -P端口号 -u用户名 -p密码（默认端口3306，用户root）<h3 id="MySQL退出"><a href="#MySQL退出" class="headerlink" title="MySQL退出"></a>MySQL退出</h3></li><li>exit</li><li>quit</li></ol></li></ol><h3 id="常见命令和语法大区"><a href="#常见命令和语法大区" class="headerlink" title="常见命令和语法大区"></a>常见命令和语法大区</h3><p>别忘了分号啊</p><ol><li><p>查看当前所有的数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show database();</span><br></pre></td></tr></table></figure></li><li><p>打开指定的库 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use 库名;                </span><br><span class="line">（只要用了use你就在那个库中了）</span><br></pre></td></tr></table></figure></li><li><p>查看当前库所有的表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">show tables; </span><br><span class="line">```   </span><br><span class="line">     </span><br><span class="line">4. 查看其他库所有的表</span><br><span class="line">``` bash</span><br><span class="line">show tables from 库名;  </span><br></pre></td></tr></table></figure></li><li><p>创建表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line">列名 列类型，</span><br><span class="line">列名 列类型，</span><br><span class="line">...</span><br><span class="line">)    </span><br></pre></td></tr></table></figure></li><li><p>查看表的结构  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">desc 表名;</span><br><span class="line">```               </span><br><span class="line"><span class="comment">### 查看服务器的版本：</span></span><br><span class="line">方式一：登录到mysql服务端</span><br><span class="line">``` bash</span><br><span class="line">select version();</span><br></pre></td></tr></table></figure></li></ol><p>方式二：没有登录到mysql服务端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql --version或mysql --V</span><br></pre></td></tr></table></figure><h3 id="语法规范"><a href="#语法规范" class="headerlink" title="语法规范"></a>语法规范</h3><ol><li>不区分大小写，但建议关键字大写，表名列名小写；</li><li>每句命令要用分号结尾；</li><li>每句命令根据需要，可以进行缩进 或换行；</li><li>注释<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">单行注释：<span class="comment">#注释文字</span></span><br><span class="line">单行注释：-- 注释文字（注意空格）</span><br><span class="line">多行注释：/* 注释文字 */</span><br></pre></td></tr></table></figure>##<br>ctrl s是保存；选中之后F12格式化；</li></ol><p>安装了navicat，导入girls和myemployees俩数据集<br>##</p><h1 id="基础查询-DQL语言"><a href="#基础查询-DQL语言" class="headerlink" title="基础查询 DQL语言"></a>基础查询 DQL语言</h1><h2 id="进阶1"><a href="#进阶1" class="headerlink" title="进阶1"></a>进阶1</h2><p>先打开库</p><pre><code>USE myemployees;</code></pre><p>select 查询列表 from 表名</p><pre><code>查询列表可以是：表中的字段、常量值、表达式、函数查询的结果是一个虚拟的表格</code></pre><p>1.查询表中的单个字段</p><pre><code>SELECT last_name FROM employees;</code></pre><p>2.查询表中的多个字段</p><pre><code>SELECT last_name,salary,email FROM employees;</code></pre><p>3.查询表中所有字段（双击左侧） </p><pre><code>#方式一SELECT   `department_id`,             #这个符号是着重号，用于说明是字段而不是关键字``  `department_name`,  `manager_id`,  `location_id`  FROM   employees;#方式二SELECT * FROM employees ;</code></pre><p>4.查询常量值</p><pre><code>SELECT 100;SELECT &#39;john&#39;;#（不区分字符和字符串）</code></pre><p>5.查询表达式</p><pre><code>SELECT 100%98;                 #取余</code></pre><p>6.查询函数</p><pre><code>SELECT VERSION();              #调用并得到返回值</code></pre><p>7.起别名</p><pre><code>/*①便于理解②如果要查询的字段有重名的情况，使用别名可以区分开来*/#方式一:用asSELECT 100%98 AS 结果;SELECT last_name AS 姓, first_name AS 名 FROM employees;#方式二:空格SELECT last_name 姓，first_name 名 FROM employees;</code></pre><p>案例：查询salary，显示结果为out put</p><pre><code>SELECT salary AS &quot;out put&quot; FROM employees;不能：SELECT salary AS &quot;out put&quot; FROM employees;因为有特殊符号的时候就用双引号引起来，单引号也行的，建议双引号。</code></pre><p>8.去重distinct</p><p>案例：查询员工表涉及到的所有部门编号</p><pre><code>SELECT DISTINCT department_id FROM employees;</code></pre><ol start="9"><li><p>+号的作用</p><p> /*<br> java中的+号：<br> ①运算符：两个操作数都为数值型<br> ②连接符：只要有一个操作数为字符串</p><p> mysql中的+号：<br> 仅仅只有一个功能：运算符</p></li></ol><pre><code>select 100+90；select &#39;123&#39;+90; 其中一方为字符型，会试图将字符型数值转换成数值型                  如果转换成功则继续加法运算select &#39;john&#39;+90; 如果转换失败，则字符型数组值转换成0；select null+10;只要其中一方为null，则结果为null*/使用concat进行连接null和别人拼接的时候都是nullselect concat(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;) AS 结果</code></pre><p>案例：查询员工名和姓连接成一个字段，并显示为 姓名</p><pre><code>SELECT CONCAT(last_name,first_name) AS 姓名 FROM employees;不能：SELECT last_name + first_name AS 姓名 FROM employees;</code></pre><p>10.判断是否为空</p><p>commission_pct是否为空？为空返回what</p><pre><code>SELECT     IFNULL(commission_pct, what) AS 奖金率,    commission_pct FROM     employees;</code></pre><h2 id="进阶2-条件查询"><a href="#进阶2-条件查询" class="headerlink" title="进阶2 - 条件查询"></a>进阶2 - 条件查询</h2><pre><code>语法：    select        查询列表       第三步    from        表名           第一步    where        筛选条件;      第二步分类：    1.按条件表达式筛选    条件运算符: &gt;  &lt;  =    != or &lt;&gt;(不等于)    &gt;= &lt;=    2.按逻辑表达式筛选    逻辑运算符：   与&amp;&amp; 或|| 非!    sql推荐使用    and or not    作用：连接条件表达式    &amp;&amp; and 都1则1    || or 有1则1    ！ not 是0则1    3.模糊查询    like     between and    in     is null    is not null</code></pre><h2 id="按照条件表达式查询"><a href="#按照条件表达式查询" class="headerlink" title="按照条件表达式查询"></a>按照条件表达式查询</h2><p>案例1：查询工资&gt;12000的员工信息</p><pre><code>SELECT    *FROM    employeesWHERE    salary &gt; 12000;</code></pre><p>案例2：查询部门编号不等于90号的员工名和部门编号</p><pre><code>SELECT    last_name,    department_idFROM    employeesWHERE    department_id != 90;        #最好用&lt;&gt;</code></pre><h2 id="按逻辑表达式筛选"><a href="#按逻辑表达式筛选" class="headerlink" title="按逻辑表达式筛选"></a>按逻辑表达式筛选</h2><p>案例1：查询工资在10000到20000之间的员工名，工资和奖金</p><pre><code>SELECT    last_name,    salary,    commission_pctFROM    employeesWHERE    salary &gt;= 10000 AND salary &lt;= 20000;</code></pre><p>案例2：查询部门编号不在90-120之间，或者工资高于15000的员工信息</p><pre><code>SELECT    *FROM    employeesWHERE    department_id &lt; 90 OR department_id &gt; 120 OR salary &gt; 15000;       WHERE    NOT(department_id &gt;= 90 AND department_id &lt;= 120) OR salary &gt; 15000;</code></pre><h2 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h2><pre><code>/*</code></pre><h3 id="like"><a href="#like" class="headerlink" title="like:"></a>like:</h3><pre><code>①一般和通配符搭配使用    通配符：    % 任意多个字符，可以是0个    _ 任意单个字符*/</code></pre><p>案例1：查询员工名中包含字符a的员工信息</p><pre><code>SELECT    *FROM    employeesWHERE    last_name LIKE &#39;%a%&#39;;    %a%用于匹配，%代表通配符，代表任意个字符</code></pre><p>案例2：查询员工名中第3个字符为n，第五个字符为l的员工名和工资</p><pre><code>SELECT    last_name,    salaryFROM    employeesWHERE    last_name LIKE &#39;__n_l%&#39;;</code></pre><p>案例3：查询员工名中第二个字符为_的员工名（转义字符）</p><pre><code>SELECT    last_nameFROM     employeesWHERE          last_name LIKE &#39;_\_%&#39;;        last_name LIKE &#39;_a_%&#39; ESCAPE &#39;a&#39;;     #a随便取的，为的仅仅是说明a是转义，可以用￥等随意，只需要说明就行    #------------------------------------------------#</code></pre><h3 id="between-and"><a href="#between-and" class="headerlink" title="between and"></a>between and</h3><pre><code>/*①使用between and可以提高语句的简洁度②包含临界值③两个临界值的位置不能调换，不会报错但效果不一样*/</code></pre><p>案例1：查询员工编号在100到120之间的员工信息</p><pre><code>SELECT    *FROM    employeesWHERE    employee_id BETWEEN 100 AND 120;#------------------------------------------------#    </code></pre><h3 id="in"><a href="#in" class="headerlink" title="in"></a>in</h3><pre><code>/*含义：用于判断某字段的值是否属于in列表中的某一项特点：    ①使用in提高语句简洁度    ②in列表的值类型必须统一或者兼容    ③不支持通配符，相当于等号*/</code></pre><p>案例：查询员工的工种编号是 IT_PROT, AD_VP, AD_PRES中的一个的员工名和工种编号</p><pre><code>SELECT    last_name,    job_idFROM    employeesWHERE    job_id=&#39;IT_PROT&#39; OR job_id=&#39;AD_VP&#39; OR job_id=&#39;AD_VP&#39;;方法二 - 用in：    WHERE    job_id IN (&#39;IT_PROT&#39; ,&#39;AD_VP&#39; , &#39;AD_VP&#39;);#------------------------------------------------#</code></pre><h3 id="is-null-is-not-null"><a href="#is-null-is-not-null" class="headerlink" title="is null(is not null)"></a>is null(is not null)</h3><pre><code>/*=或者&lt;&gt;不能用于判断null值*/</code></pre><p>案例1：查询没有奖金的员工名和奖金率</p><pre><code>SELECT    last_name,    commission_pctFROM    employeesWHERE    commission_pct IS NULL;####安全等于  &lt;=&gt;  is null可以换成&lt;=&gt; null</code></pre><p>案例1：查询没有奖金的员工名和奖金率</p><pre><code>SELECT    last_name,    commission_pctFROM    employeesWHERE    commission_pct &lt;=&gt; NULL;</code></pre><p>案例2：查询工资为12000的员工信息</p><pre><code>SELECT    last_name,    salaryFROM    employeesWHERE    salary &lt;=&gt; 12000;</code></pre><p>区别</p><pre><code>IS NULL ：仅仅可以判断NULL值&lt;=&gt;     ：既可以判断NULL值，又可以判断普通的数值。    </code></pre><p>函数重提</p><pre><code> concat:拼接字符isnull:判断，如果是空值则返回1，不是则返回0ifnull:判断，如果是空值则返回一个给定值，不然则返回原本的值</code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;本篇是学习mysql的基础篇笔记&lt;/p&gt;</summary>
    
    
    
    <category term="默认分类" scheme="http://example.com/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="mysql" scheme="http://example.com/tags/mysql/"/>
    
    <category term="学习笔记" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
